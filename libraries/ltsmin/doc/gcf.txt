//                           -*- mode: doc; outline-regexp: "==\(=*\) ." -*-
gcf(1)
======
:Author:  Stefan Blom
:Email:   <sccblom@cs.utwente.nl>
:Date:    2008-12-03


== NAME
gcf - Build and extract GCF archives.

== SYNOPSIS
gcf <gcf> [input1 [input2 [...]]]

gcf -x <gcf> <outputspec>

== DESCRIPTION
This tool can build a GCF archive from a given list of files and files within given directories.
It can extract the files from a GCF archive and write them to a directory or to a set of files given by a pattern.

A GCF archive provides interleaved storage of multiple large files within one very large file.
The GCF file structure was designed with distributed file systems and distributed applications in mind.
The key points of the structure are that a GCF file contains one or more clusters and each of those clusters contains
2 or more blocks. One block in each cluster is reserved for meta data.

== OPTIONS

*-c*, *--create*::
Create a GCF archive in a file. This is the default.

*--create-dz*::
Create a GCF archive in a directory.

*-x*, *--extract*::
Extract a GCF archive. This mode requires an optional output argument. If no argument is present then the fiels are extracted into the current directory.
If the argument is a name then a directory of that name is created if no file or directory using that name exists and the files are extracted into that directory. If the argument is a string contain ++%s++ (for example ++out-%s++) then files are extracted as this pattern with ++%s++ replaced by the file name (for example ++file++ ends up extracted as  ++out-file++).

*-f*, *--force*::
By default extraction to a directory fails is a file or directory already exists.
If this flag is used any existing file or directory is removed.

*--block-size*='BYTES'::
        Size of a block in bytes.  Defaults to 32,768.

*--cluster-size*='BLOCKS'::
        Number of blocks in a cluster.  Defaults to 32.

*-z*, *--compression*='<policy>'::
Set the compression policy used in the archive. The default is to apply gzip to every file. For how to specify compression policies, see below.

include::inc/general-options.txt[]

include::inc/compression.txt[]

== EXAMPLE

Given a GCF archive 'generated.gcf' that contains an LTS, we can extract
a dir as follows:
----
gcf -x generated.gcf generated.dir
----

The inverse (transforming 'generated.dir' to 'generated.gcf') is also possible, but it is better to use
linkman:ltsmin-convert[1] for this task because the best compression is achieved by applying different compressions
to different files, which cannot be specified with '-z'.

== EXIT STATUS
0::
        Successful termination.
>0::
        Some error occurred.


